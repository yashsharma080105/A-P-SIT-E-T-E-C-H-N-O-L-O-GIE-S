class ContactBook:
    def __init__(self):
        self.contacts =  []

    def add_contact(self, name, phone_number, email, address ):
        contact ={
            'name': name,
            'phone_number': phone_number,
            'email': email,
            'address': address
        }
        self.contacts.append(contact)
        print(f"Contact '{name}' added successfully.")

    def view_contacts(self):
        if not self.contacts:
            print("Contact book is empty.")
        else:
            print("\n--- Contacts List ---")
            for index, contact in enumerate(self.contacts):
                print(f"{index + 1}. Name: {contact['name']}, Phone: {contact['phone_number']}")

    def search_contact(self, search_term):
        found_contacts = []
        for contact in self.contacts:
            if (search_term.lower() in contact["name"].lower()) or (search_term in contact["phone_number"]):
                found_contacts.append(contact)

        if not found_contacts:
            print("No contacts found.")
        else:
            print("\n--- Search Results ---")
            for contact in found_contacts:
                print(f"Name: {contact['name']}, Phone: {contact['phone_number']}" )

    def update_contact(self, name):
        for contact in self.contacts:
            if contact['name'].lower() == name.lower():
                new_phone_number = input("Enter new phone number: ")
                new_email = input("Enter new email: ")
                new_address = input("Enter new address: ")

                contact['phone_number'] = new_phone_number if new_phone_number else contact['phone_number']
                contact['email'] = new_email if new_email else contact['email']
                contact['address'] = new_address if new_address else contact['address']
                print(f"Contact '{name}' updated successfully.")
                return

        print(f"Contact '{name}' not found.")

    def delete_contact(self, name):
        for contact in self.contacts:
            if contact['name'].lower() == name.lower():
                self.contacts.remove(contact)
                print(f"Contact '{name}' deleted successfully.")
                return

        print(f"Contact '{name}' not found.")


# Main program to interact with the ContactBook

def main() :
    contact_book = ContactBook()

    while True:
        print("\n--- Contact Book Menu ---")
        print("1. Add New Contact")
        print("2. View All Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == '1':
            name = input("Enter name: ")
            phone_number = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            contact_book.add_contact(name, phone_number, email, address)

        elif choice == '2':
            contact_book.view_contacts()

        elif choice == '3':
            search_term = input("Enter name or phone number to search: ")
            contact_book.search_contact(search_term)

        elif choice == '4':
            name = input("Enter name of contact to update: ")
            contact_book.update_contact(name)

        elif choice == '5':
            name = input("Enter name of contact to delete: ")
            contact_book.delete_contact(name)

        elif choice == '6':
            print("Exiting Contact Book.")
            break

        else:
            print("Invalid choice. Please enter a number between 1 and 6.")


if __name__ == "__main__" :
    main()
